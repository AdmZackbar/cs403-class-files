(define (reverse-list list)
    (define (iter store src)
        (cond
            ((null? src) store)
            (else
                (iter (cons (car src) store) (cdr src))
                )
            )
        )
    (iter nil list)
    )

(define (print-list list)
    (define (iter items)
        (if (null? items)
            "\n"
            (string+ " " (car items) (iter (cdr items)))
            )
        )
    (if (null? list)
        ""
        (print (car list) (iter (cdr list)))
        )
    )

(define (printSpaces numSpaces)
    (cond
        ((<= numSpaces 0) "")
        (else
            (string+ " " (printSpaces (- numSpaces 1)))
            )
        )
    )

(define (crazyTriangle left right)
    (lambda (levels)
        (define (generateList oldList)
            (define (iter newListPtr oldListPtr)
                (cond
                    ((null? (cdr oldListPtr))
                        (cons right newListPtr)
                        )
                    (else
                        (iter (cons (+ (car oldListPtr) (car (cdr oldListPtr))) newListPtr) (cdr oldListPtr))
                        )
                    )
                )
            (iter (list left) oldList)
            )
        (define (iter level prevList)
            (print (printSpaces (- levels level)))
            (cond
                ((and (= level 1) (> levels 0))
                    (println left)
                    (iter (+ level 1) (list left right))
                    )
                ((< level levels)
                    (print-list prevList)
                    (iter (+ level 1) (reverse-list (generateList prevList)))
                    )
                ((= level levels)
                    (print-list prevList)
                    )
                )
            )
        (iter 1 nil)
        )
    )

(define (main)
    (setPort (open (getElement ScamArgs 1) 'read))
    (define left (readInt))
    (define right (readInt))
    (define levels (readInt))
    (println "((crazyTriangle " left " " right ") " levels ")")
    ((crazyTriangle left right) levels)
    )
