class Conditional
{
    function testBreakLoop(startVal, endVal)
    {
        // Another way of exiting while loops
        while (true)
        {
            if (startVal > endVal)
            {
                return startVal;
            }
            print(startVal, " ");
            startVal = startVal + 1;
        }
    }
}

main()
{
    // Test if/else
    var i = 0;
    if (false)
    {
        println("I will not print");
    }
    else if (0)
    {
        println("I will not print either");
    }
    else if (i / 2)
    {
        println("I will not print with this i value at 0");
    }
    else
    {
        println("I will print if the others do not");
    }
    if (true)
    {
        println("I will always print");
    }
    if (6 > 0)
    {
        println("True expressions will eval to true");
    }
    
    // Test while
    var i = 0;
    while (i < 10)
    {
        print(i, " ");
        i = i + 1;
    }
    println("");
    while (false)
    {
        println("I cannot be printed");
    }
    var condTester = Conditional();
    condTester.testBreakLoop(5, 15);
    println("");
    
    // Test do-while
    var x = 10;
    do
    {
        print(x, " ");
        x = x - 1;
    } while (x > 0);
    println("");
    do
    {
        println("Even if the expression is false, I will print once");
    } while (false);
    
    return 0;
}
